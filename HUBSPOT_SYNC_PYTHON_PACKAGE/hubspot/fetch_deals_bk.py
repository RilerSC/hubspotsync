import requests
import os
from dotenv import load_dotenv

load_dotenv()
# print("🔐 TOKEN CARGADO:", os.getenv("HUBSPOT_TOKEN"))

# Lista completa de propiedades a consultar
DEAL_PROPERTIES = [
    "ahorro_a_solicitar",
    "amount",
    "closed_lost_reason",
    "closed_won_reason",
    "closedate",
    "createdate",
    "credito_a_solicitar__general_",
    "cuota",
    "dealname",
    "dealstage",
    "dealtype",
    "estatus_del_credito",
    "fecha_de_vencimiento_cip",
    "garantia_del_credito",
    "hs_closed_won_date",
    "hs_date_entered_1020709503",
    "hs_date_entered_1021581111",
    "hs_date_entered_1021673788",
    "hs_date_entered_1021706902",
    "hs_date_entered_1021706903",
    "hs_date_entered_1022003481",
    "hs_date_entered_1028261453",
    "hs_date_entered_1028261454",
    "hs_date_entered_1028261455",
    "hs_date_entered_1028261456",
    "hs_date_entered_1028261457",
    "hs_date_entered_1028261458",
    "hs_date_entered_1028261459",
    "hs_date_entered_1028261464",
    "hs_date_entered_1028261465",
    "hs_date_entered_1028340090",
    "hs_date_entered_1028340091",
    "hs_date_entered_1028340092",
    "hs_date_entered_1028340093",
    "hs_date_entered_1028340094",
    "hs_date_entered_1028340095",
    "hs_date_entered_1028340096",
    "hs_date_entered_1028425758",
    "hs_date_entered_1028425759",
    "hs_date_entered_1028425760",
    "hs_date_entered_1028425761",
    "hs_date_entered_1028425762",
    "hs_date_entered_1028425763",
    "hs_date_entered_1028425764",
    "hs_date_entered_1035727195",
    "hs_date_entered_991356712",
    "hs_date_entered_991356713",
    "hs_date_entered_991356714",
    "hs_date_entered_991356715",
    "hs_date_entered_991356716",
    "hs_date_entered_991356717",
    "hs_date_entered_991356718",
    "hs_date_entered_991416885",
    "hs_date_entered_991416886",
    "hs_date_entered_991416887",
    "hs_date_entered_991416888",
    "hs_date_entered_991416889",
    "hs_date_entered_991416890",
    "hs_date_entered_991416891",
    "hs_date_entered_991416914",
    "hs_date_entered_991416915",
    "hs_date_entered_991416916",
    "hs_date_entered_991416917",
    "hs_date_entered_991416918",
    "hs_date_entered_991416919",
    "hs_date_entered_991416920",
    "hs_date_entered_991426847",
    "hs_date_entered_991426848",
    "hs_date_entered_991426849",
    "hs_date_entered_991426850",
    "hs_date_entered_991426851",
    "hs_date_entered_991426852",
    "hs_date_entered_991426853",
    "hs_date_entered_991426857",
    "hs_date_entered_991426858",
    "hs_date_entered_991426859",
    "hs_date_entered_991426860",
    "hs_date_entered_991426862",
    "hs_date_entered_991426863",
    "hs_date_entered_991426864",
    "hs_date_entered_991426865",
    "hs_date_entered_991426866",
    "hs_date_entered_991426867",
    "hs_date_entered_991426869",
    "hs_date_entered_991426870",
    "hs_date_entered_991429907",
    "hs_date_entered_991429908",
    "hs_date_entered_991429909",
    "hs_date_entered_991429910",
    "hs_date_entered_991429912",
    "hs_date_entered_991429913",
    "hs_date_entered_991431433",
    "hs_date_entered_991498780",
    "hs_date_entered_991498781",
    "hs_date_entered_991498782",
    "hs_date_entered_991498783",
    "hs_date_entered_991498784",
    "hs_date_entered_991498785",
    "hs_date_entered_991498786",
    "hs_date_entered_992017296",
    "hs_date_entered_994507188",
    "hs_date_entered_994615105",
    "hs_date_entered_994615106",
    "hs_date_entered_994615107",
    "hs_date_entered_994615108",
    "hs_date_entered_996295514",
    "hs_date_entered_appointmentscheduled",
    "hs_date_entered_closedlost",
    "hs_date_entered_closedwon",
    "hs_date_entered_contractsent",
    "hs_date_entered_decisionmakerboughtin",
    "hs_date_entered_presentationscheduled",
    "hs_date_entered_qualifiedtobuy",
    "hs_date_exited_1020709503",
    "hs_date_exited_1021581111",
    "hs_date_exited_1021673788",
    "hs_date_exited_1021706902",
    "hs_date_exited_1021706903",
    "hs_date_exited_1022003481",
    "hs_date_exited_1028261453",
    "hs_date_exited_1028261454",
    "hs_date_exited_1028261455",
    "hs_date_exited_1028261456",
    "hs_date_exited_1028261457",
    "hs_date_exited_1028261458",
    "hs_date_exited_1028261459",
    "hs_date_exited_1028261464",
    "hs_date_exited_1028261465",
    "hs_date_exited_1028340090",
    "hs_date_exited_1028340091",
    "hs_date_exited_1028340092",
    "hs_date_exited_1028340093",
    "hs_date_exited_1028340094",
    "hs_date_exited_1028340095",
    "hs_date_exited_1028340096",
    "hs_date_exited_1028425758",
    "hs_date_exited_1028425759",
    "hs_date_exited_1028425760",
    "hs_date_exited_1028425761",
    "hs_date_exited_1028425762",
    "hs_date_exited_1028425763",
    "hs_date_exited_1028425764",
    "hs_date_exited_1035727195",
    "hs_date_exited_991356712",
    "hs_date_exited_991356713",
    "hs_date_exited_991356714",
    "hs_date_exited_991356715",
    "hs_date_exited_991356716",
    "hs_date_exited_991356717",
    "hs_date_exited_991356718",
    "hs_date_exited_991416885",
    "hs_date_exited_991416886",
    "hs_date_exited_991416887",
    "hs_date_exited_991416888",
    "hs_date_exited_991416889",
    "hs_date_exited_991416890",
    "hs_date_exited_991416891",
    "hs_date_exited_991416914",
    "hs_date_exited_991416915",
    "hs_date_exited_991416916",
    "hs_date_exited_991416917",
    "hs_date_exited_991416918",
    "hs_date_exited_991416919",
    "hs_date_exited_991416920",
    "hs_date_exited_991426847",
    "hs_date_exited_991426848",
    "hs_date_exited_991426849",
    "hs_date_exited_991426850",
    "hs_date_exited_991426851",
    "hs_date_exited_991426852",
    "hs_date_exited_991426853",
    "hs_date_exited_991426857",
    "hs_date_exited_991426858",
    "hs_date_exited_991426859",
    "hs_date_exited_991426860",
    "hs_date_exited_991426862",
    "hs_date_exited_991426863",
    "hs_date_exited_991426864",
    "hs_date_exited_991426865",
    "hs_date_exited_991426866",
    "hs_date_exited_991426867",
    "hs_date_exited_991426869",
    "hs_date_exited_991426870",
    "hs_date_exited_991429907",
    "hs_date_exited_991429908",
    "hs_date_exited_991429909",
    "hs_date_exited_991429910",
    "hs_date_exited_991429912",
    "hs_date_exited_991429913",
    "hs_date_exited_991431433",
    "hs_date_exited_991498780",
    "hs_date_exited_991498781",
    "hs_date_exited_991498782",
    "hs_date_exited_991498783",
    "hs_date_exited_991498784",
    "hs_date_exited_991498785",
    "hs_date_exited_991498786",
    "hs_date_exited_992017296",
    "hs_date_exited_994507188",
    "hs_date_exited_994615105",
    "hs_date_exited_994615106",
    "hs_date_exited_994615107",
    "hs_date_exited_994615108",
    "hs_date_exited_996295514",
    "hs_date_exited_appointmentscheduled",
    "hs_date_exited_closedlost",
    "hs_date_exited_closedwon",
    "hs_date_exited_contractsent",
    "hs_date_exited_decisionmakerboughtin",
    "hs_date_exited_presentationscheduled",
    "hs_date_exited_qualifiedtobuy",
    "hs_object_id",
    "hubspot_owner_id",
    "hubspot_team_id",
    "monto_a_ahorrar_por_periodo",
    "monto_a_invertir",
    "monto_cancelaciones_externas",
    "monto_capitalizacion",
    "monto_de_comisiones",
    "monto_del_credito",
    "monto_polizas",
    "monto_refundido_interno",
    "motivo_del_cierre_perdido",
    "nivel_resolutor",
    "numero_de_solicitud_codeas",
    "pipeline",
    "plazo_cip",
    "plazo_del_credito_en_meses",
    "porcentaje_comision_administrativa",
    "porcentaje_comision_operativa",
    "porcentaje_de_capitalizacion",
    "salario_bruto_semanal_o_quincenal",
    "seguro_a_solicitar",
    "valor_del_bien"
]

def fetch_deals_from_hubspot():
    url = "https://api.hubapi.com/crm/v3/objects/deals"
    headers = {
        "Authorization": f"Bearer {os.getenv('HUBSPOT_TOKEN')}",
        "Content-Type": "application/json"
    }

    params_base = [("limit", 100)] + [("properties", prop) for prop in DEAL_PROPERTIES]
    all_deals = []
    after = None

    while True:
        params = params_base.copy()
        if after:
            params.append(("after", after))

        response = requests.get(url, headers=headers, params=params)
        if response.status_code != 200:
            print("❌ Error:", response.status_code)
            print(response.text)
            response.raise_for_status()

        data = response.json()
        deals = data.get("results", [])
        all_deals.extend(deals)

        paging = data.get("paging")
        if paging and paging.get("next") and paging["next"].get("after"):
            after = paging["next"]["after"]
        else:
            break

    return all_deals