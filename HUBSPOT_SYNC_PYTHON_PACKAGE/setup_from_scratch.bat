@echo off
echo ============================================
echo CREACI√ìN Y CONFIGURACI√ìN COMPLETA
echo ============================================

REM Verificar Python global
echo üîç Verificando Python global...
py --version
if errorlevel 1 (
    echo ‚ùå Python no est√° disponible
    pause
    exit /b 1
)

REM Eliminar entorno virtual existente si hay problemas
if exist "venv" (
    echo üóëÔ∏è Eliminando entorno virtual problem√°tico...
    rmdir /s /q venv
)

REM Crear entorno virtual desde cero
echo üì¶ Creando entorno virtual nuevo...
py -m venv venv
if errorlevel 1 (
    echo ‚ùå Error creando entorno virtual
    pause
    exit /b 1
)

echo ‚úÖ Entorno virtual creado exitosamente

REM Activar entorno virtual
echo ‚ö° Activando entorno virtual...
call venv\Scripts\activate.bat

REM Verificar activaci√≥n
echo üîç Verificando entorno virtual...
echo Ubicaci√≥n de python:
where python
echo Versi√≥n de python:
python --version

REM Actualizar pip
echo üì¶ Actualizando pip...
python -m pip install --upgrade pip

REM Instalar dependencias desde requirements.txt
echo üì¶ Instalando desde requirements.txt...
pip install -r requirements.txt

echo üß™ Verificando instalaci√≥n final...
echo.
echo Verificando requests...
python -c "import requests; print('‚úÖ requests version:', requests.__version__)"

echo.
echo Verificando pyodbc...
python -c "import pyodbc; print('‚úÖ pyodbc version:', pyodbc.version)"

echo.
echo Verificando dotenv...
python -c "from dotenv import load_dotenv; print('‚úÖ dotenv OK')"

echo.
echo Verificando hubspot m√≥dulos...
python -c "from hubspot.fetch_deals import fetch_deals_from_hubspot; print('‚úÖ hubspot.fetch_deals OK')"

echo.
echo ============================================
echo ‚úÖ CONFIGURACI√ìN COMPLETA EXITOSA
echo ============================================
echo El entorno virtual est√° listo para usar
echo Ejecuta run_sync.bat para sincronizar
echo ============================================
pause
