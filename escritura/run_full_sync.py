# run_full_sync.py
"""
Coordinador para ejecutar ambos procesos de sincronizaci√≥n:
1. Primero INSERT (contactos nuevos)
2. Despu√©s UPDATE (contactos existentes)

No modifica ning√∫n proceso existente, solo los ejecuta en secuencia.
"""
import os
import sys
import subprocess
from datetime import datetime
from pathlib import Path

def print_separator(message):
    """Imprime un separador visual para claridad en logs"""
    print("\n" + "="*80)
    print(f" {message}")
    print("="*80 + "\n")

def run_script(script_name):
    """Ejecuta un script Python y retorna si fue exitoso"""
    print(f"üöÄ Iniciando {script_name}...")
    start_time = datetime.now()
    
    try:
        # Ejecutar el script
        result = subprocess.run([
            sys.executable, script_name
        ], cwd=Path(__file__).parent, capture_output=False, text=True)
        
        end_time = datetime.now()
        duration = end_time - start_time
        
        if result.returncode == 0:
            print(f"‚úÖ {script_name} completado exitosamente")
            print(f"‚è±Ô∏è  Duraci√≥n: {duration}")
            return True
        else:
            print(f"‚ùå {script_name} fall√≥ con c√≥digo: {result.returncode}")
            print(f"‚è±Ô∏è  Duraci√≥n: {duration}")
            return False
            
    except Exception as e:
        end_time = datetime.now()
        duration = end_time - start_time
        print(f"üí• Error ejecutando {script_name}: {str(e)}")
        print(f"‚è±Ô∏è  Duraci√≥n: {duration}")
        return False

def main():
    """Funci√≥n principal que coordina la ejecuci√≥n completa"""
    print_separator("INICIO DE SINCRONIZACI√ìN COMPLETA HUBSPOT")
    print(f"üìÖ Fecha/Hora: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    overall_start = datetime.now()
    
    # Fase 1: INSERT (contactos nuevos)
    print_separator("FASE 1: INSERT - CONTACTOS NUEVOS")
    insert_success = run_script("production_insert_full.py")
    
    # Fase 2: UPDATE (contactos existentes)
    print_separator("FASE 2: UPDATE - CONTACTOS EXISTENTES")
    update_success = run_script("production_update.py")
    
    # Resumen final
    overall_end = datetime.now()
    total_duration = overall_end - overall_start
    
    print_separator("RESUMEN FINAL")
    print(f"üìä INSERT: {'‚úÖ EXITOSO' if insert_success else '‚ùå FALL√ì'}")
    print(f"üìä UPDATE: {'‚úÖ EXITOSO' if update_success else '‚ùå FALL√ì'}")
    print(f"‚è±Ô∏è  Duraci√≥n total: {total_duration}")
    
    if insert_success and update_success:
        print("üéâ SINCRONIZACI√ìN COMPLETA EXITOSA")
        return 0
    elif insert_success or update_success:
        print("‚ö†Ô∏è  SINCRONIZACI√ìN PARCIALMENTE EXITOSA")
        return 1
    else:
        print("üíÄ SINCRONIZACI√ìN FALL√ì COMPLETAMENTE")
        return 2

if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code)
